parameters:
    enhavo_app.twig.filter_collector.class: Enhavo\Bundle\AppBundle\Type\TypeCollector

services:
    enhavo_app.factory.filter:
        class: Enhavo\Bundle\AppBundle\Filter\FilterFactory
        arguments:
          - '@enhavo_app.filter_collector'
          - '@router'

    enhavo_app.factory.filter_query:
        class: Enhavo\Bundle\AppBundle\Filter\FilterQueryFactory

    enhavo_app.filter_collector:
        class: '%enhavo_app.twig.filter_collector.class%'
        arguments:
          - '@service_container'
          - 'Filter'

    enhavo_app.filter.filer_query_builder:
        class: Enhavo\Bundle\AppBundle\Filter\FilterQueryBuilder
        arguments:
            - '@enhavo_app.factory.filter'
            - '@enhavo_app.factory.filter_query'

    enhavo_app.filter.text:
        class: Enhavo\Bundle\AppBundle\Filter\Filter\TextFilter
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: enhavo.filter, alias: text }

    enhavo_app.filter.boolean:
        class: Enhavo\Bundle\AppBundle\Filter\Filter\BooleanFilter
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: enhavo.filter, alias: boolean }

    enhavo_app.filter.option:
        class: Enhavo\Bundle\AppBundle\Filter\Filter\OptionFilter
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: enhavo.filter, alias: option }

    enhavo_app.filter.entity:
        class: Enhavo\Bundle\AppBundle\Filter\Filter\EntityFilter
        calls:
            - [setContainer, ['@service_container']]
        tags:
            - { name: enhavo.filter, alias: entity }